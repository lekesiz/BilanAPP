{{#> layouts/main}}
<div class="container mx-auto px-4 py-8">
  <div class="max-w-2xl mx-auto">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-2xl font-bold text-gray-800">{{title}}</h1>
      <a href="/admin/users" class="text-blue-600 hover:text-blue-800">
        Retour à la liste
      </a>
    </div>

    {{#if messages.error_msg}}
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
        <span class="block sm:inline">{{messages.error_msg}}</span>
      </div>
    {{/if}}

    <div class="bg-white shadow-md rounded-lg p-6">
      <form action="{{#if editing}}/admin/users/{{userData.id}}/update{{else}}/admin/users/create{{/if}}" method="POST" class="space-y-6">
        <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
          <div>
            <label for="firstName" class="block text-sm font-medium text-gray-700">Prénom</label>
            <input type="text" name="firstName" id="firstName" required
              class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
              value="{{userData.firstName}}">
          </div>

          <div>
            <label for="lastName" class="block text-sm font-medium text-gray-700">Nom</label>
            <input type="text" name="lastName" id="lastName" required
              class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
              value="{{userData.lastName}}">
          </div>

          <div class="sm:col-span-2">
            <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
            <input type="email" name="email" id="email" required
              class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
              value="{{userData.email}}">
          </div>

          {{#unless editing}}
            <div class="sm:col-span-2">
              <label for="password" class="block text-sm font-medium text-gray-700">Mot de passe</label>
              <input type="password" name="password" id="password" required
                class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
              <p class="mt-1 text-sm text-gray-500">Minimum 8 caractères, avec au moins une lettre majuscule, une minuscule et un chiffre</p>
            </div>
          {{/unless}}

          <div>
            <label for="userType" class="block text-sm font-medium text-gray-700">Type d'utilisateur</label>
            <select name="userType" id="userType" required
              class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
              <option value="">Sélectionner un type</option>
              {{#each userTypeOptions}}
                <option value="{{this}}" {{#if (eq this ../userData.userType)}}selected{{/if}}>{{this}}</option>
              {{/each}}
            </select>
          </div>

          <div>
            <label for="forfaitType" class="block text-sm font-medium text-gray-700">Forfait</label>
            <select name="forfaitType" id="forfaitType"
              class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
              <option value="">Aucun forfait</option>
              {{#each forfaitOptions}}
                <option value="{{this}}" {{#if (eq this ../userData.forfaitType)}}selected{{/if}}>{{this}}</option>
              {{/each}}
            </select>
          </div>

          <div>
            <label for="availableCredits" class="block text-sm font-medium text-gray-700">Crédits initiaux</label>
            <input type="number" name="availableCredits" id="availableCredits" min="0"
              class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
              value="{{userData.availableCredits}}">
          </div>

          <div>
            <label for="status" class="block text-sm font-medium text-gray-700">Statut</label>
            <select name="status" id="status" required
              class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
              <option value="active" {{#if (eq userData.status 'active')}}selected{{/if}}>Actif</option>
              <option value="inactive" {{#if (eq userData.status 'inactive')}}selected{{/if}}>Inactif</option>
              <option value="suspended" {{#if (eq userData.status 'suspended')}}selected{{/if}}>Suspendu</option>
            </select>
          </div>
        </div>

        <div class="flex justify-end space-x-3">
          <a href="/admin/users" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
            Annuler
          </a>
          <button type="submit" class="bg-blue-600 text-white py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
            {{#if editing}}Mettre à jour{{else}}Créer l'utilisateur{{/if}}
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const password = document.getElementById('password');
    const userType = document.getElementById('userType');
    const forfaitType = document.getElementById('forfaitType');

    // Password validation
    if (password) {
      password.addEventListener('input', function() {
        const value = this.value;
        const hasUpperCase = /[A-Z]/.test(value);
        const hasLowerCase = /[a-z]/.test(value);
        const hasNumber = /[0-9]/.test(value);
        const hasMinLength = value.length >= 8;

        if (!hasUpperCase || !hasLowerCase || !hasNumber || !hasMinLength) {
          this.setCustomValidity('Le mot de passe doit contenir au moins 8 caractères, une majuscule, une minuscule et un chiffre');
        } else {
          this.setCustomValidity('');
        }
      });
    }

    // Form submission validation
    form.addEventListener('submit', function(e) {
      if (!form.checkValidity()) {
        e.preventDefault();
        e.stopPropagation();
      }
      form.classList.add('was-validated');
    });

    // Update forfait options based on user type
    userType.addEventListener('change', function() {
      if (this.value === 'admin') {
        forfaitType.value = '';
        forfaitType.disabled = true;
      } else {
        forfaitType.disabled = false;
      }
    });

    // Initial state
    if (userType.value === 'admin') {
      forfaitType.disabled = true;
    }
  });
</script>
{{/layouts/main}} 